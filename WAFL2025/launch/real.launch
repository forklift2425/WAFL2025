<launch>

	  <!-- Arguments for CAN configuration -->
	<arg name="can_interface" default="vcan0"/>
	<arg name="can_bitrate" default="500000"/>

	<!-- Node to set up the CAN interface using setup script -->
	<!--<node name="can_setup" pkg="WAFL2025" type="setup_can.sh" output="screen" args="$(arg can_interface) $(arg can_bitrate)"/> -->
	<!-- <param name="can_translate/can_interface" value="vcan0" /> -->

 	 <!-- Launch the CAN receiver node -->
  	<!-- <node name="can_translate" pkg="WAFL2025" type="can_trnaslate.py" output="screen"/> -->

	<arg name="arg_x" default="0.00" />
	<arg name="arg_y" default="0.00" />
	<arg name="arg_z" default="0.5" />
	<arg name="arg_R" default="0.00" />
	<arg name="arg_P" default="0.00" />
	<arg name="arg_Y" default="1.57" />
	<!--Urdf file path-->

	   
	<param name="robot_description" textfile="$(find WAFL2025)/urdf/WAFL2025_hw.urdf"/>

	
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
          <param name="use_gui" value="False"/>
          <rosparam param="source_list">[/joint_states]</rosparam>
        </node>
		

	
	 <node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
		args="0.0 0.0 0.0 0 0 0.0 /map /odom 40" />



<!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz
can visualize -->
	 <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
respawn="false" output="screen"/>   

        <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find WAFL2025)/config/trial.rviz"/>

	<!--Kinect-->
	
	<node name="static_transform_base_to_kinect" pkg="tf" type="static_transform_publisher" output="screen" args="0 0 0 0 0 0 base_link kinect_link 100"/>
            

     <!-- Load Controllers -->
  <rosparam file="$(find WAFL2025)/config/swerve_control.yaml" command="load"/>
  
  <!-- Start the controller manager -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" 
      args="joint_state_controller leftweb_steer_controller rightweb_steer_controller castorjoint_steer_controller 
            leftwheel_drive_controller rightwheel_drive_controller castorwheel_drive_controller" 
      respawn="false" output="screen" launch-prefix="bash -c 'sleep 5; $0 $@'"/>

</launch>
