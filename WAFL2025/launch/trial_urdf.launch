<launch>
	<arg name="arg_x" default="0.00" />
	<arg name="arg_y" default="0.00" />
	<arg name="arg_z" default="0.5" />
	<arg name="arg_R" default="0.00" />
	<arg name="arg_P" default="0.00" />
	<arg name="arg_Y" default="1.57" />
	<!--Urdf file path-->
	<param name="robot_description" textfile="$(find WAFL2025)/urdf/WAFL2025.urdf"/>
	
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
          <param name="use_gui" value="False"/>
          <rosparam param="source_list">[/joint_states]</rosparam>
        </node>
		
	<!--spawn a gazebo world-->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" >
	<arg name="world_name" value="$(find WAFL2025)/worlds/home1.world"/>
		<arg name="paused" value="false" />
		<arg name="use_sim_time" value="true" />
		<arg name="gui" value="true" />
		<arg name="recording" value="false" />
		<arg name="debug" value="false" />
	</include>
	
	 <node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
args="0.0 0.0 0.0 0 0 0.0 /map /odom 40" />





	<!--spawn model-->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg
arg_y) -z $(arg arg_z) -R $(arg arg_R) -P $(arg arg_P) -Y $(arg arg_Y) -param robot_description -urdf -model
WAFL2025" />

<!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz
can visualize -->
	 <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
respawn="false" output="screen"/>   

        <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find WAFL2025)/config/trial.rviz"/>

	<!--Kinect-->
	
	<node name="static_transform_base_to_kinect" pkg="tf" type="static_transform_publisher" output="screen" args="0 0 0 0 0 0 base_link kinect_link 100"/>

       <!-- Hokuyo LiDAR Driver -->
        <node pkg="urg_node" type="urg_node" name="hokuyo_node" output="screen">
          <param name="frame_id" value="hokuyo_link"/>
        </node>
        
       <!-- EKF Node -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_filter_node" output="screen">
    <rosparam file="$(find WAFL2025)/config/ekf.yaml" command="load"/>
  </node>
       

     <!-- Load Controllers -->
  <rosparam file="$(find WAFL2025)/config/swerve_control.yaml" command="load"/>
  
  <!-- Start the controller manager -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" 
      args="joint_state_controller leftweb_steer_controller rightweb_steer_controller castorjoint_steer_controller 
            leftwheel_drive_controller rightwheel_drive_controller castorwheel_drive_controller" 
      respawn="false" output="screen" launch-prefix="bash -c 'sleep 5; $0 $@'"/>

</launch>
