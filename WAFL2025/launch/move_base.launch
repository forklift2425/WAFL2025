<launch>
    <node pkg="move_base" type="move_base" name="move_base" output="screen">
      <rosparam file="$(find WAFL2025)/param/costmap_common_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find WAFL2025)/param/costmap_common_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find WAFL2025)/param/global_costmap_params.yaml" command="load"/>
      <rosparam file="$(find WAFL2025)/param/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find WAFL2025)/param/base_local_planner_params.yaml" command="load"/>
    </node>


    <param name="robot_description" textfile="$(find WAFL2025)/urdf/WAFL2025.urdf"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False"/>
        <rosparam param="source_list">[/joint_states]</rosparam>
      </node>
      

  
   <!-- <node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
      args="0.0 0.0 0.0 0 0 0.0 /map /odom 40" /> -->



<!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz
can visualize -->
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
respawn="false" output="screen"/>   

      <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find WAFL2025)/config/trial.rviz"/>


      <!-- Fake Odometry (For Testing Only!) -->
    <node pkg="fake_localization" type="fake_localization" name="fake_odom"/>
   

<node name="static_transform_base_to_kinect" pkg="tf" type="static_transform_publisher" output="screen" args="0 0 0 0 0 0 base_link kinect_link 100"/>


  </launch>