<launch>

    <!-- Arguments -->
    <arg name="arg_x" default="0.00" />
    <arg name="arg_y" default="0.00" />
    <arg name="arg_z" default="0.3" />
    <arg name="arg_R" default="0.00" />
    <arg name="arg_P" default="0.00" />
    <arg name="arg_Y" default="0.00" />
    <arg name="map_file" default="$(find WAFL2025)/maps/office_map.yaml"/> <!-- Path to your map file -->
    
    <node pkg="move_base" type="move_base" name="move_base" output="screen">
      <!-- Remove any explicit base_local_planner parameter -->
      <rosparam file="$(find WAFL2025)/param/costmap_common_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find WAFL2025)/param/costmap_common_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find WAFL2025)/param/global_costmap_params.yaml" command="load"/>
      <rosparam file="$(find WAFL2025)/param/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find WAFL2025)/param/dwa_local_planner_params.yaml" command="load"/> <!-- Updated filename -->
      <remap from="cmd_vel" to="/cmd_vel"/>
    </node>


    <param name="robot_description" textfile="$(find WAFL2025)/urdf/WAFL2025.urdf"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False"/>
        <rosparam param="source_list">[/joint_states]</rosparam>
      </node>
      
    <!-- ******** MAP SERVER (Load your pre-built map) ******** -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>
  
    <!-- ******** AMCL NODE ******** -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
      <!-- General Parameters -->
      <param name="min_particles" value="100"/>
      <param name="max_particles" value="2000"/>
      <param name="kld_err" value="0.05"/>
      <param name="kld_z" value="0.99"/>
      <param name="update_min_d" value="0.2"/>
      <param name="update_min_a" value="0.5"/>
      <param name="resample_interval" value="2"/>
      <param name="transform_tolerance" value="0.5"/>
      <param name="recovery_alpha_slow" value="0.0"/>
      <param name="recovery_alpha_fast" value="0.0"/>
      <param name="initial_pose_x" value="$(arg arg_x)"/>
      <param name="initial_pose_y" value="$(arg arg_y)"/>
      <param name="initial_pose_a" value="$(arg arg_Y)"/>
      <param name="gui_publish_rate" value="10.0"/>
      
      <!-- Laser Model Parameters -->
      <param name="laser_min_range" value="0.1"/>
      <param name="laser_max_range" value="12.0"/>
      <param name="laser_max_beams" value="30"/>
      <param name="laser_z_hit" value="0.95"/>
      <param name="laser_z_short" value="0.1"/>
      <param name="laser_z_max" value="0.05"/>
      <param name="laser_z_rand" value="0.05"/>
      <param name="laser_sigma_hit" value="0.2"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_model_type" value="likelihood_field"/>
      
      <!-- Odometry Model Parameters -->
      <param name="odom_model_type" value="diff"/>
      <param name="odom_alpha1" value="0.2"/>
      <param name="odom_alpha2" value="0.2"/>
      <param name="odom_alpha3" value="0.2"/>
      <param name="odom_alpha4" value="0.2"/>
      <param name="odom_frame_id" value="odom"/>
      <param name="base_frame_id" value="base_link"/>
      <param name="global_frame_id" value="map"/>
      
      <!-- TF Configuration -->
      <param name="tf_broadcast" value="true"/>
      
      <!-- Topic Remapping -->
      <remap from="scan" to="/scan"/>
  </node>

  <!-- Add this after your AMCL node -->
  <!--<node pkg="tf" type="static_transform_publisher" name="map_to_odom" 
  args="0 0 0 0 0 0 /map /odom 100"/> -->
  <!-- RPLiDAR Node -->
  <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
      <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
      <param name="serial_baudrate" type="int" value="115200"/>
      <param name="frame_id" type="string" value="laser"/>
      <param name="inverted" type="bool" value="false"/>
      <param name="angle_compensate" type="bool" value="true"/>
  </node>

  <!-- TF Transformations -->
  <!-- Base to Laser TF -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" 
      args="0 0 0 0 0 0 /base_link /laser 100"/>

  <!-- Robot State Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen"/>  

  <!-- RViz Visualization -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find WAFL2025)/config/path_planning.rviz"/>

  <!-- ROS Control -->
  <node name="controller_spawner" pkg="controller_manager" 
      type="controller_manager" args="load diff_drive_controller" />

  <!-- ******** YOUR EXISTING NODES ******** -->
  <!-- Swerve Odometry Node -->
  <node name="swerve_odometry_node" pkg="WAFL2025" type="swerve_odometry_node.py"
      output="screen" respawn="true" />


</launch>